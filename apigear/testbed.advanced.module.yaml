schema: apigear.module/1.0
name: testbed2
version: "1.0"

# test operations with many parameters (1...4)
# each operation parameter is associated with a property (param1 -> prop1)
# each operation has the same signal with same parameter signatures (func1 -> sig1)
# each operation return the type of the first parameter (func1(param1: int) -> return int)
interfaces:
  - name: ManyParamInterface
    properties:
      - { name: prop1, type: int }
      - { name: prop2, type: int }
      - { name: prop3, type: int }
      - { name: prop4, type: int }
    operations:
      - name: func1
        params:
          - { name: param1, type: int }
        return : { type: int }
      - name: func2
        params:
          - { name: param1, type: int }
          - { name: param2, type: int }
        return: { type: int }
      - name: func3
        params:
          - { name: param1, type: int }
          - { name: param2, type: int }
          - { name: param3, type: int }
        return: { type: int }
      - name: func4
        params:
          - { name: param1, type: int }
          - { name: param2, type: int }
          - { name: param3, type: int }
          - { name: param4, type: int }
        return: { type: int }
    signals:
      - name: sig1
        params:
          - { name: param1, type: int }
      - name: sig2
        params:
          - { name: param1, type: int }
          - { name: param2, type: int }
      - name: sig3
        params:
          - { name: param1, type: int }
          - { name: param2, type: int }
          - { name: param3, type: int }
      - name: sig4
        params:
          - { name: param1, type: int }
          - { name: param2, type: int }
          - { name: param3, type: int }
          - { name: param4, type: int }
  - name: NestedStruct1Interface
    properties:
      - { name: prop1, type: NestedStruct1 }
    operations:
      - name: func1
        params:
          - { name: param1, type: NestedStruct1 }
        return: { type: NestedStruct1 }
    signals:
      - name: sig1
        params:
          - { name: param1, type: NestedStruct1 }
  - name: NestedStruct2Interface
    properties:
      - { name: prop1, type: NestedStruct1 }
      - { name: prop2, type: NestedStruct2 }
    operations:
      - name: func1
        params:
          - { name: param1, type: NestedStruct1 }
        return: { type: NestedStruct1 }
      - name: func2
        params:
          - { name: param1, type: NestedStruct1 }
          - { name: param2, type: NestedStruct2 }
        return: { type: NestedStruct1 }
    signals:
      - name: sig1
        params:
          - { name: param1, type: NestedStruct1 }
      - name: sig2
        params:
          - { name: param1, type: NestedStruct1 }
          - { name: param2, type: NestedStruct2 }
  - name: NestedStruct3Interface
    properties:
      - { name: prop1, type: NestedStruct1 }
      - { name: prop2, type: NestedStruct2 }
      - { name: prop3, type: NestedStruct3 }
    operations:
      - name: func1
        params:
          - { name: param1, type: NestedStruct1 }
        return: { type: NestedStruct1 }
      - name: func2
        params:
          - { name: param1, type: NestedStruct1 }
          - { name: param2, type: NestedStruct2 }
        return: { type: NestedStruct1 }
      - name: func3
        params:
          - { name: param1, type: NestedStruct1 }
          - { name: param2, type: NestedStruct2 }
          - { name: param3, type: NestedStruct3 }
        return: { type: NestedStruct1 }
    signals:
      - name: sig1
        params:
          - { name: param1, type: NestedStruct1 }
      - name: sig2
        params:
          - { name: param1, type: NestedStruct1 }
          - { name: param2, type: NestedStruct2 }
      - name: sig3
        params:
          - { name: param1, type: NestedStruct1 }
          - { name: param2, type: NestedStruct2 }
          - { name: param3, type: NestedStruct3 }
structs:
  - name: Struct1
    fields:
      - { name: field1, type: int }
  - name: Struct2
    fields:
      - { name: field1, type: int }
      - { name: field2, type: int }
  - name: Struct3
    fields:
      - { name: field1, type: int }
      - { name: field2, type: int }
      - { name: field3, type: int }
  - name: Struct4
    fields:
      - { name: field1, type: int }
      - { name: field2, type: int }
      - { name: field3, type: int }
      - { name: field4, type: int }
  - name: NestedStruct1
    fields:
      - { name: field1, type: Struct1 }
  - name: NestedStruct2
    fields:
      - { name: field1, type: Struct1 }
      - { name: field2, type: Struct2 }

  - name: NestedStruct3
    fields:
      - { name: field1, type: Struct1 }
      - { name: field2, type: Struct2 }
      - { name: field3, type: Struct3 }
enums:
  - name: Enum1
    members:
      - { name: value1, value: 1 }
      - { name: value2, value: 2 }
      - { name: value3, value: 3 }
      - { name: value4, value: 4 }
  - name: Enum2
    members:
      - { name: value1, value: 1 }
      - { name: value2, value: 2 }
      - { name: value3, value: 3 }
      - { name: value4, value: 4 }
  - name: Enum3
    members:
      - { name: value1, value: 1 }
      - { name: value2, value: 2 }
      - { name: value3, value: 3 }
      - { name: value4, value: 4 }
