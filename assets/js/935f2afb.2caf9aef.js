"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/template-qtcpp/intro","docId":"intro"},{"type":"link","label":"Quick-Start","href":"/template-qtcpp/quickstart/","docId":"quickstart/index"},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"API","href":"/template-qtcpp/features/api","docId":"features/api"},{"type":"link","label":"Stubs","href":"/template-qtcpp/features/stubs","docId":"features/stubs"},{"type":"link","label":"Olink","href":"/template-qtcpp/features/olink","docId":"features/olink"},{"type":"link","label":"Monitor","href":"/template-qtcpp/features/monitor","docId":"features/monitor"},{"type":"link","label":"Qml Plugin","href":"/template-qtcpp/features/qmlplugin","docId":"features/qmlplugin"}],"href":"/template-qtcpp/features/"}]},"docs":{"features/api":{"id":"features/api","title":"API","description":"The feature api is the bare minimum for the code generation. What you receive is:","sidebar":"docsSidebar"},"features/features":{"id":"features/features","title":"Features","description":"This guide explains how to use the generated code, what are the available features and  their benefits.","sidebar":"docsSidebar"},"features/monitor":{"id":"features/monitor","title":"Monitor","description":"Use our monitor feature to examine the interface calls, state and signals. With this feature you obtain a monitor client and a monitored version of your interfaces. The monitoring server is embedded into the ApiGear Studio and CLI application(https://docs.apigear.io/docs/category/command-line).","sidebar":"docsSidebar"},"features/olink":{"id":"features/olink","title":"Olink","description":"This feature provides a client and a server adapter for your interfaces for the ObjectLink protocol. It allows you to connect different applications in the same or different technologies (check all of our templates).","sidebar":"docsSidebar"},"features/qmlplugin":{"id":"features/qmlplugin","title":"Qml Plugin","description":"You may want to use a Qml plugin for your module. This may be handy when you don\'t want to register structs (with qRegisterMetaType) or the interfaces (with qmlRegisterType) on compile time, in the main. Instead you can use the structs and the interfaces as an external module.","sidebar":"docsSidebar"},"features/stubs":{"id":"features/stubs","title":"Stubs","description":"The feature stubs adds:","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"This is the documentation for the Qt template.","sidebar":"docsSidebar"},"quickstart/index":{"id":"quickstart/index","title":"Quick-Start","description":"The Quick-Start guide explains how to, in few steps, get from an API to a functional Qt plugin.","sidebar":"docsSidebar"}}}')}}]);